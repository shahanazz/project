<%- include('partials/header')%>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"/>
<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<style>
    p {
        margin: 0;
    }

    .upload__box {
        padding: 40px;
    }

    .upload__inputfile {
        width: .1px;
        height: .1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

    .upload__btn {
        display: inline-block;
        font-weight: 600;
        color: #fff;
        text-align: center;
        min-width: 116px;
        padding: 5px;
        transition: all .3s ease;
        cursor: pointer;
        border: 2px solid;
        background-color: #4045ba;
        border-color: #4045ba;
        border-radius: 10px;
        line-height: 26px;
        font-size: 14px;
    }

    .upload__btn:hover {
        background-color: unset;
        color: #4045ba;
        transition: all .3s ease;
    }

    .upload__btn-box {
        margin-bottom: 10px;
    }

    .upload__img-wrap {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -10px;
    }

    .upload__img-box {
        width: 200px;
        padding: 0 10px;
        margin-bottom: 12px;
        position: relative;
    }

    .upload__img-close {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.5);
        position: absolute;
        top: 10px;
        right: 10px;
        text-align: center;
        line-height: 24px;
        z-index: 1;
        cursor: pointer;
        color: white;
        font-size: 14px;
    }

    .img-bg {
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
        position: relative;
        padding-bottom: 100%;
    }

    .error-message {
        color: red;
        font-size: 0.75rem;
        display: none;
    }
</style>

<body>
<div class="container-scroller">
    <!-- partial:partials/_navbar.html -->
    <%- include('partials/navbar')%>
    <!-- partial -->
    <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_sidebar.html -->
        <%- include('partials/sidebar')%>
        <!-- partial -->
            <div class="container">
                <h2>Edit product</h2>
                <form id="productForm" action="/admin/editProduct?id=<%= product._id %>" method="POST" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <!-- Form Fields -->
                            <div class="form-group">
                                <label for="productname">Product Name:</label>
                                <input type="text" id="productname" name="productname" class="form-control" value="<%= product.productname %>">
                                <div id="error1" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="category">Category:</label>
                                <select class="form-select" name="category" id="category" required>
                                    <% category.forEach(cat => { %>
                                        <option value="<%= cat._id %>" <%= product.category.equals(cat._id) ? 'selected' : '' %>><%= cat.category %></option>
                                    <% }) %>
                                    <div id="error2" class="error-message"></div>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="brand">Brand:</label>
                                <select class="form-select" name="brand" id="brand" required>
                                    <% brands.forEach(brand => { %>
                                        <option value="<%= brand._id %>" <%= product.category.equals(brand._id) ? 'selected' : '' %>><%= brand.brandName %></option>
                                    <% }) %>
                                </select>
                                <div id="error3" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="color">Color:</label>
                                <input type="text" id="color" name="color" class="form-control" value="<%= product.color %>">
                                <div id="error4" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="size">Size:</label>
                                <input type="text" id="size" name="size" class="form-control" value="<%= product.size %>">
                                <div id="error5" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="description">Description:</label>
                                <textarea id="description" name="description" class="form-control"><%= product.description %></textarea>
                                <div id="error6" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="quantity">Quantity:</label>
                                <input type="text" id="quantity" name="quantity" class="form-control" value="<%= product.quantity %>">
                                <div id="error7" class="error-message"></div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label for="regularPrice">Regular Price:</label>
                                    <input type="text" id="regularprice" name="regularprice" class="form-control" value="<%= product.regularprice %>">
                                    <div id="error8" class="error-message"></div>
                                </div>
                               
                            </div>
                            <div class="form-group">
                                <label for="offer">Product Offer:</label>
                                <input type="text" id="offer" name="productoffer" class="form-control" value="<%= product.productoffer %>">
                                <div id="error9" class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="upload__box">
                                <div class="upload__btn-box">
                                    <label class="upload__btn">
                                        <p>Upload images</p>
                                        <input type="file" class="upload__inputfile" name="image" accept="image/*">
                                    </label>
                                </div>
                                <div class="upload__img-wrap">
                                    <% if (product.image && product.image.length > 0) { %>
                                        <% for (let i = 0; i < product.image.length; i++) { %>
                                            <div class='upload__img-box'>
                                                <img src="/productImages/<%= product.image[i] %>" alt="Product Image" class="img-bg" style="width: 200px;">
                                                <div class='upload__img-close'>
                                                    <a href="javascript:void(0)" onclick="deleteSingleImage('<%= product.image[i] %>', '<%= product._id %>')" style="color: red;">×</a>
                                                </div>
                                            </div>
                                        <% } %>
                                    <% } else { %>
                                        <!-- When no images are uploaded, allow uploading and previewing -->
                                        <% for (let i = 0; i < 3; i++) { %>
                                            <div class="upload__img-box upload__img-placeholder">
                                                <img src="" alt="Product Image" class="img-bg" style="width: 200px; display: none;">
                                                <div class="upload__img-close" style="display: none;">
                                                    <a href="javascript:void(0)" class="delete-new-image" style="color: red;">×</a>
                                                </div>
                                            </div>
                                        <% } %>
                                    <% } %>
                                </div>
                            </div>
                            
                        <input type="hidden" id="deletedImages" name="deletedImages" value="">
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</body>
<%- include('partials/footer')%>


<!-- SweetAlert2 JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


    <script>
   jQuery(document).ready(function () {
    ImgUpload();
});

function ImgUpload() {
    var imgWrap = "";
    var imgArray = [];
    var cropper;
    var cropperImage = $('#cropper-image');
    var cropperContainer = $('.cropper-container');
    var cropSaveButton = $('#crop-save-button');
    var hiddenInputsContainer = $('#hidden-inputs-container');
    var errorImages = $('#error-images');

    $('.upload__inputfile').each(function () {
        $(this).on('change', function (e) {
            imgWrap = $(this).closest('.upload__box').find('.upload__img-wrap');
            var maxLength = $(this).data('max_length');

            var files = e.target.files;
            var filesArr = Array.prototype.slice.call(files);

            filesArr.forEach(function (f) {
                if (!f.type.match('image.*')) {
                    return;
                }

                if (imgArray.length >= maxLength) {
                    return false;
                }

                var reader = new FileReader();
                reader.onload = function (e) {
                    cropperImage.attr('src', e.target.result);
                    cropperContainer.show();

                    cropper = new Cropper(cropperImage[0], {
                        aspectRatio: 1,
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });

                    cropSaveButton.off('click').on('click', function () {
                        if (cropper) {
                            var croppedCanvas = cropper.getCroppedCanvas();
                            croppedCanvas.toBlob(function (blob) {
                                var file = new File([blob], f.name, { type: 'image/png' });

                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + file.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                                    imgWrap.append(html);

                                    imgArray.push(file);

                                    // Create a new hidden input with the cropped image
                                    var inputName = 'productImages';  // Use the model's field name
                                    var hiddenInput = $('<input>')
                                        .attr('type', 'hidden')
                                        .attr('name', inputName)
                                        .val(e.target.result);
                                    hiddenInputsContainer.append(hiddenInput);

                                    cropperContainer.hide();
                                    cropper.destroy();
                                    cropper = null;
                                }
                                reader.readAsDataURL(file);
                            }, 'image/png', 1.0);
                        }
                    });
                }
                reader.readAsDataURL(f);
            });
        });
    });

    $('body').on('click', ".upload__img-close", function () {
        var file = $(this).parent().data("file");
        imgArray = imgArray.filter(function (img) {
            return img.name !== file;
        });
        $(this).closest('.upload__img-box').remove();
    });
}



 
const pnameId = document.getElementById('productname');
const catId = document.getElementById('category');
const brandId = document.getElementById('brand');
const colorId = document.getElementById('color');
const descId = document.getElementById('description');
const sizeId = document.getElementById('size');
const rprice = document.getElementById('regularprice');
const sprice = document.getElementById('saleprice');
const quantity = document.getElementById('quantity');
const offer = document.getElementById('productoffer');


const error1 = document.getElementById('error1');
const error2 = document.getElementById('error2');
const error3 = document.getElementById('error3');
const error4 = document.getElementById('error4');
const error5 = document.getElementById('error5');
const error6 = document.getElementById('error6');
const error7 = document.getElementById('error7');
const error8 = document.getElementById('error8');

const errorImages = document.getElementById('error-images');
const hiddenInputsContainer = $('#hidden-inputs-container');

const productForm = document.getElementById('productForm');
// console.log( 'product form -->',productForm);

console.log('product formsss',productForm);

document.addEventListener('DOMContentLoaded', function () {
    pnameId.addEventListener('blur', validateProductName);
    colorId.addEventListener('blur', validateColor);
    sizeId.addEventListener('blur', validateSize);
     descId.addEventListener('blur', validateDescription);
    rprice.addEventListener('blur', validateRegularPrice);
    quantity.addEventListener('blur', validateQuantity);

    // Validate images on file selection, not just hidden inputs
    // $('.upload__inputfile').on('change', validateImages);

    // Form submission event
    productForm.addEventListener('submit', function (e) {
        e.preventDefault();  // Prevent default form submission temporarily

        if (!validateForm()) {
            // Validation failed, show SweetAlert error
            Swal.fire({
                icon: 'error',
                title: 'Validation Failed',
                text: 'Please correct the errors before submitting.'
            });
        } else {
            // Validation passed, show SweetAlert success
            Swal.fire({
                icon: 'success',
                title: 'Product updated successfully',
                text: 'The product details have been successfully updated.'
            }).then((result) => {
                if (result.isConfirmed) {
                    productForm.submit();  // Submit the form after confirmation
                }
            });
        }
    });
});


// productForm.addEventListener('submit', function (e) {
//     // Prevent default form submission for validation purposes
//     e.preventDefault();

//     // Run all validation functions
//     validateProductName();
//     validateCategory();
//     validateBrand();
//     validateColor();
//     validateSize();
//     validateDescription();
//     validateQuantity();
//     validateRegularPrice(); // Include this if needed

//     // Check if there are any visible errors
//     if (error1.style.display === 'block' ||
//         error2.style.display === 'block' ||
//         error3.style.display === 'block' ||
//         error4.style.display === 'block' ||
//         error5.style.display === 'block' ||
//         error6.style.display === 'block' ||
//         error7.style.display === 'block' ||
//         error8.style.display === 'block') {
        
//         // Prevent form submission and show error SweetAlert if validation fails
//         Swal.fire({
//             icon: 'error',
//             title: 'Please correct the errors',
//             text: 'Ensure all fields are properly filled out.'
//         });

//         // Return to prevent further execution since there are errors
//         return false;
//     }

//     // If validation passes, show success SweetAlert and then submit the form
//     Swal.fire({
//         icon: 'success',
//         title: 'Product updated successfully',
//         text: 'The product details have been successfully updated.'
//     }).then((result) => {
//         if (result.isConfirmed) {
//             // Submit the form after the user confirms the success message
//             productForm.submit();
//         }
//     });
// });

function validateForm() {
    validateProductName();
    validateColor();
    validateDescription();
    validateSize();
    validateRegularPrice();
    validateQuantity();
    // validateImages();

    if (error1.innerHTML || error4.innerHTML || error5.innerHTML || error6.innerHTML || error7.innerHTML || error6.innerHTML ) {
        return false;
    }
    return true;
}


function validateProductName() {
    const pnameVal = pnameId.value;
    if (pnameVal.trim() === '') {
        error1.style.display = 'block';
        error1.innerHTML = 'Please enter the product name';
    } else {
        error1.style.display = 'none';
        error1.innerHTML = '';
    }
}


function validateColor() {
    const colorVal = colorId.value;
    if (colorVal.trim() === '') {
        error4.style.display = 'block';
        error4.innerHTML = 'Please enter the color';
    } else {
        error4.style.display = 'none';
        error4.innerHTML = '';
    }
}

function validateSize() {
    const sizeVal = sizeId.value;
    if (sizeVal.trim() === '') {
        error5.style.display = 'block';
        error5.innerHTML = 'Please enter the size';
    } else {
        error5.style.display = 'none';
        error5.innerHTML = '';
    }
}

function validateDescription() {
    const descVal = descId.value;
    if (descVal.trim() === '') {
        error6.style.display = 'block';
        error6.innerHTML = 'Please enter a description';
    } else {
        error6.style.display = 'none';
        error6.innerHTML = '';
    }
}

function validateQuantity() {
    const quantityVal = quantity.value;
    const quantityPattern = /^[0-9]+$/;

    if (quantityVal.trim() === '') {
        error7.style.display = 'block';
        error7.innerHTML = 'Please enter the quantity';
    } else if (!quantityPattern.test(quantityVal)) {
        error7.style.display = 'block';
        error7.innerHTML = 'Invalid quantity format';
    } else {
        error7.style.display = 'none';
        error7.innerHTML = '';
    }
}

function validateRegularPrice() {
    const rpriceVal = rprice.value;
    const pricePattern = /^[0-9]+(\.[0-9]{1,2})?$/;

    if (rpriceVal.trim() === '') {
        error8.style.display = 'block';
        error8.innerHTML = 'Please enter the regular price';
    } else if (!pricePattern.test(rpriceVal)) {
        error8.style.display = 'block';
        error8.innerHTML = 'Invalid price format';
    } else {
        error8.style.display = 'none';
        error8.innerHTML = '';
    }
}

function validateImages() {
    const imagesCount = hiddenInputsContainer.find('input[name="productImages"]').length;
    if (imagesCount < 3) {
        errorImages.style.display = 'block';
        errorImages.innerHTML = 'Please upload at least 3 images';
    } else {
        errorImages.style.display = 'none'; 
        errorImages.innerHTML = '';
    }
}


function deleteSingleImage(imageId, productId){
    $.ajax({
        url: '/admin/deleteImage',
        method: 'post',
        data: { imageNameToServer: imageId, productIdToServer: productId },
        success: (response) => {
            if (response.success === true) {
                window.location.reload();
            }
        }
    });
}



    </script>
    
    






























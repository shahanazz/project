<%- include('partials/header')%>

<body class="with-welcome-text">
    <div class="container-scroller">
      
      <!-- partial:partials/_navbar.html -->
      <%- include('partials/navbar')%>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_sidebar.html -->
        <%- include('partials/sidebar')%>
        <!-- partial -->


            <title>Add New Product</title>
            <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"/>

            <style>
                p {
                        margin: 0;
                    }
            
                    .upload__box {
                        padding: 40px;
                    }
            
                    .upload__inputfile {
                        width: .1px;
                        height: .1px;
                        opacity: 0;
                        overflow: hidden;
                        position: absolute;
                        z-index: -1;
                    }
            
                    .upload__btn {
                        display: inline-block;
                        font-weight: 600;
                        color: #fff;
                        text-align: center;
                        min-width: 116px;
                        padding: 5px;
                        transition: all .3s ease;
                        cursor: pointer;
                        border: 2px solid;
                        background-color: #4045ba;
                        border-color: #4045ba;
                        border-radius: 10px;
                        line-height: 26px;
                        font-size: 14px;
                    }
            
                    .upload__btn:hover {
                        background-color: unset;
                        color: #4045ba;
                        transition: all .3s ease;
                    }
            
                    .upload__btn-box {
                        margin-bottom: 10px;
                    }
            
                    .upload__img-wrap {
                        display: flex;
                        flex-wrap: wrap;
                        margin: 0 -10px;
                    }
            
                    .upload__img-box {
                        width: 200px;
                        padding: 0 10px;
                        margin-bottom: 12px;
                        position: relative;
                    }
            
                    .upload__img-close {
                        width: 24px;
                        height: 24px;
                        border-radius: 50%;
                        background-color: rgba(0, 0, 0, 0.5);
                        position: absolute;
                        top: 10px;
                        right: 10px;
                        text-align: center;
                        line-height: 24px;
                        z-index: 1;
                        cursor: pointer;
                        color: white;
                        font-size: 14px;
                    }
            
                    .img-bg {
                        background-repeat: no-repeat;
                        background-position: center;
                        background-size: cover;
                        position: relative;
                        padding-bottom: 100%;
                    }

                    .error-message {
                        color: red;
                        font-size: 0.75rem;
                        display: none;
                    }
            </style>
            <!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            
            <!-- <style>
                .container {
                    margin: 20px auto;
                    max-width: 1000px;
                }
        
                img {
                    max-width: 100%;
                }
        
                .cropper-view-box,
                .cropper-face {
                    border-radius: 0; /* Square shape */
                }
        
                .cropper-view-box {
                    outline: 0;
                    box-shadow: 0 0 0 1px #39f;
                }
        
                .thumbnail-wrapper {
                    margin-bottom: 20px;
                }
        
                .thumbnail {
                    max-width: 100px;
                    max-height: 100px;
                }
            </style> -->
        </head>
        <body>
            <div class="container">
                <h2>Add New Product</h2>
                <form id="productForm" action="/admin/addProduct" method="POST" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productname">Product Name:</label>
                                <input type="text" id="productname" name="productname" class="form-control" required>
                                <div id="error1" class="error-message">hi</div>
                            </div>
                            <div class="form-group">
                                <label for="category">Category:</label>
                                <select class="form-select" name="category" id="category" required>
                                    <% category.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.category %></option>
                                    <% }) %>
                                </select>
                                <div id="error2" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="brand">Brand:</label>
                                <input type="text" id="brand" name="brand" class="form-control" required>
                                <div id="error3" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="color">Color:</label>
                                <input type="text" id="color" name="color" class="form-control" required>
                                <div id="error4" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="size">Size:</label>
                                <input type="text" id="size" name="size" class="form-control" required>
                                <div id="error5" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="description">Description:</label>
                                <textarea id="description" name="description" class="form-control" required></textarea>
                                <div id="error6" class="error-message"></div>
                            </div>
                            <div class="form-group">
                                <label for="quantity">Quantity:</label>
                                <input type="text" id="quantity" name="quantity" class="form-control" required>
                                <div id="error7" class="error-message"></div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label for="regularPrice">Regular Price:</label>
                                    <input type="text" id="regularprice" name="regularprice" class="form-control" required>
                                    <div id="error8" class="error-message"></div>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="salePrice">Sale Price:</label>
                                    <input type="text" id="saleprice" name="saleprice" class="form-control">
                                    <div id="error9" class="error-message"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="offer">Product Offer:</label>
                                <input type="text" id="offer" name="productoffer" class="form-control" value="0" required>
                                <div id="error10" class="error-message"></div>
                            </div>
                       
                   
                            <!-- <button type="submit" class="btn btn-primary">Publish Product</button> -->
                        </div>



                        <div class="col-md-6">
                            <div class="upload__box">
                                <div class="upload__btn-box">
                                    <label class="upload__btn">
                                        <p>Upload images</p>
                                        <input type="file" multiple data-max_length="20" class="upload__inputfile" name="image" accept="image/*">
                                    </label>
                                </div>
                                <div class="upload__img-wrap">
                                </div>
                            </div>
                            
                            <!-- Hidden Cropper Container -->
                            <div class="cropper-container" style="display:none;">
                                <img id="cropper-image" src="" alt="Image for cropping">
                                <button type="button" id="crop-save-button" class="btn-sm btn-primary">Save</button>
                            </div>

                            <div class="upload__box">
                                <div class="upload__btn-box">
                                    <label class="upload__btn">
                                        <p>Upload images</p>
                                        <input type="file" multiple data-max_length="20" class="upload__inputfile" name="image" accept="image/*">
                                    </label>
                                </div>
                                <div class="upload__img-wrap">
                                </div>
                            </div>
                            
                            <!-- Hidden Cropper Container -->
                            <div class="cropper-container" style="display:none;">
                                <img id="cropper-image" src="" alt="Image for cropping">
                                <button type="button" id="crop-save-button" class="btn-sm btn-primary">Save</button>
                            </div>

                            <div class="upload__box">
                                <div class="upload__btn-box">
                                    <label class="upload__btn">
                                        <p>Upload images</p>
                                        <input type="file" multiple data-max_length="20" class="upload__inputfile" name="image" accept="image/*">
                                    </label>
                                </div>
                                <div class="upload__img-wrap">
                                </div>
                            </div>
                            
                            <!-- Hidden Cropper Container -->
                            <div class="cropper-container" style="display:none;">
                                <img id="cropper-image" src="" alt="Image for cropping">
                                <button type="button" id="crop-save-button" class="btn-sm btn-primary">Save</button>
                            </div>

                            <div class="upload__box">
                                <div class="upload__btn-box">
                                    <label class="upload__btn">
                                        <p>Upload images</p>
                                        <input type="file" multiple data-max_length="20" class="upload__inputfile" name="image" accept="image/*">
                                    </label>
                                </div>
                                <div class="upload__img-wrap">
                                </div>
                            </div>
                            
                            <!-- Hidden Cropper Container -->
                            <div class="cropper-container" style="display:none;">
                                <img id="cropper-image" src="" alt="Image for cropping">
                                <button type="button" id="crop-save-button" class="btn-sm btn-primary">Save</button>
                            </div>
                            



                            <!-- <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="assets/imgs/theme/upload.svg" alt="" id="imgView1">
                                <input class="form-control" type="file" name="image" id="input1"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage1(event), viewImage(event, 1)">
                            </div> -->
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg1" alt="">
                                <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                        
                        <!-- <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="assets/imgs/theme/upload.svg" alt="" id="imgView2">
                                <input class="form-control" type="file" name="image" id="input2"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage2(event),viewImage(event, 2)"> -->
                            <!-- </div> -->
                            <!-- <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg2" alt="">
                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="assets/imgs/theme/upload.svg" alt="" id="imgView3">
                                <input class="form-control" type="file" name="image" id="input3"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage3(event),viewImage(event, 3)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg3" alt="">
                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="assets/imgs/theme/upload.svg" alt="" id="imgView4">
                                <input class="form-control" type="file" name="image" id="input4"
                                    accept="image/png, image/jpeg, image/jpg"
                                    onchange="viewImage4(event),viewImage(event, 4)">
                            </div>
                            <div class="image-cropper d-flex align-items-center"
                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                <img src="" id="croppedImg4" alt="">
                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                            </div>
                        </div> -->
                            </div>
                            
                            
                        <button type="submit" class="btn btn-primary">Publish Product</button>

                    </div>
                   
                    
                        </div> 
                    
                    </div>

                  
                    
                </form>


    <!-- Add an empty container div for displaying image thumbnails -->
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
            /* Adjust margin as needed for spacing between thumbnails */
        }
    </style>


        
            <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
            <script>

jQuery(document).ready(function () {
    ImgUpload();
});

const pnameId = document.getElementById('productname');
const catId = document.getElementById('category');
const brandId = document.getElementById('brand');
const colorId = document.getElementById('color');
const descId = document.getElementById('description');
const sizeId = document.getElementById('size');
const rprice = document.getElementById('regularprice');
const sprice = document.getElementById('saleprice');
const quantity = document.getElementById('quantity');
const offer = document.getElementById('productoffer');

const error1 = document.getElementById('error1');
const error2 = document.getElementById('error2');
const error3 = document.getElementById('error3');
const error4 = document.getElementById('error4');
const error5 = document.getElementById('error5');
const error6 = document.getElementById('error6');
const error7 = document.getElementById('error7');
const error8 = document.getElementById('error8');
const error9 = document.getElementById('error9');
const error10 = document.getElementById('error10');

const productForm = document.getElementById('productForm');




function ImgUpload() {
    var imgWrap = "";
    var imgArray = [];
    var cropper;
    var cropperImage = $('#cropper-image');
    var cropperContainer = $('.cropper-container');
    var cropSaveButton = $('#crop-save-button');

    $('.upload__inputfile').each(function () {
        $(this).on('change', function (e) {
            imgWrap = $(this).closest('.upload__box').find('.upload__img-wrap');
            var maxLength = $(this).data('max_length');

            var files = e.target.files;
            var filesArr = Array.prototype.slice.call(files);

            filesArr.forEach(function (f) {
                if (!f.type.match('image.*')) {
                    return;
                }

                if (imgArray.length >= maxLength) {
                    return false;
                }

                imgArray.push(f);

                var reader = new FileReader();
                reader.onload = function (e) {
                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + f.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                    imgWrap.append(html);

                    // Show the cropper container and initialize Cropper.js
                    cropperImage.attr('src', e.target.result);
                    cropperContainer.show();

                    cropper = new Cropper(cropperImage[0], {
                        aspectRatio: 1, // Square aspect ratio
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });
                }
                reader.readAsDataURL(f);
            });
        });
    });

    cropSaveButton.on('click', function () {
        if (cropper) {
            var croppedCanvas = cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                var file = new File([blob], 'cropped-image.png', { type: 'image/png' });
                imgArray.push(file);

                var reader = new FileReader();
                reader.onload = function (e) {
                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + file.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                    imgWrap.append(html);
                }
                reader.readAsDataURL(file);

                // Hide the cropper container and destroy the cropper instance
                cropperContainer.hide();
                cropper.destroy();
                cropper = null;
            }, 'image/png', 1.0);
        }
    });

    $('body').on('click', ".upload__img-close", function () {
        var file = $(this).parent().data("file");
        imgArray = imgArray.filter(function (img) {
            return img.name !== file;
        });
        $(this).closest('.upload__img-box').remove();
    });
}



            function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }


        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();

            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById('imgView' + index);
                image.src = dataURL;

                // Initialize Cropper.js on the image
                let cropper = new Cropper(image, {
                    aspectRatio: 1, // Square aspect ratio
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true
                });


                // Show the image cropper container
                let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                cropperContainer.style.display = 'block';

                // Update the cropped image when the "Save" button is clicked
                let saveButton = document.querySelector('#saveButton' + index);
                saveButton.addEventListener('click', async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                    // Generate a unique name for the cropped image file based on the current timestamp
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;

                    await croppedCanvas.toBlob(blob => {
                        let input = document.getElementById('input' + index);
                        let imgFile = new File([blob], fileName, blob)
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files
                    });
                    // cropperContainer.style.display = 'none';
                });
            };
            reader.readAsDataURL(input.files[0]);
        }


        // Array to store selected images
        const selectedImages = [];

        // Function to handle file input change
        document.getElementById("imageInput").addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            // Target the container for displaying thumbnails
            const addedImagesContainer = document.getElementById("addedImagesContainer");

            // Clear previous content
            addedImagesContainer.innerHTML = "";

            const files = event.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];

                // Add the file to the selected images array
                selectedImages.push(file);

                // Create thumbnail element
                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                // Create image element
                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";

                // Set a fixed width for the image
                img.style.width = "50px"; // Adjust the width as needed
                img.style.height = "auto";

                // Create remove icon
                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;"; // Multiplication symbol as a cross

                // Event listener to remove the image on icon click
                removeIcon.addEventListener("click", function () {
                    // Remove the file from the selected images array
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }

                    // Remove the thumbnail from the container
                    thumbnail.remove();
                });

                // Append elements to thumbnail
                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);

                // Append thumbnail to the container
                addedImagesContainer.appendChild(thumbnail);
            }
        }







        // validate product form

      
function validateProductName() {
    const pnameVal = pnameId.value;
    if (pnameVal.trim() === '') {
        error1.style.display = 'block';
        error1.innerHTML = 'Please enter the product name';
    } else {
        error1.style.display = 'none';
        error1.innerHTML = '';
    }
}

function validateCategory() {
    const catVal = catId.value;
    if (catVal.trim() === '') {
        error2.style.display = 'block';
        error2.innerHTML = 'Please select a category';
    } else {
        error2.style.display = 'none';
        error2.innerHTML = '';
    }
}

function validateBrand() {
    const brandVal = brandId.value;
    if (brandVal.trim() === '') {
        error3.style.display = 'block';
        error3.innerHTML = 'Please enter the brand';
    } else {
        error3.style.display = 'none';
        error3.innerHTML = '';
    }
}

function validateColor() {
    const colorVal = colorId.value;
    if (colorVal.trim() === '') {
        error4.style.display = 'block';
        error4.innerHTML = 'Please enter the color';
    } else {
        error4.style.display = 'none';
        error4.innerHTML = '';
    }
}

function validateDescription() {
    const descVal = descId.value;
    if (descVal.trim() === '') {
        error5.style.display = 'block';
        error5.innerHTML = 'Please enter a description';
    } else {
        error5.style.display = 'none';
        error5.innerHTML = '';
    }
}

function validateSize() {
    const sizeVal = sizeId.value;
    if (sizeVal.trim() === '') {
        error6.style.display = 'block';
        error6.innerHTML = 'Please enter the size';
    } else {
        error6.style.display = 'none';
        error6.innerHTML = '';
    }
}

function validateRegularPrice() {
    const rpriceVal = rprice.value;
    const pricePattern = /^[0-9]+(\.[0-9]{1,2})?$/;

    if (rpriceVal.trim() === '') {
        error7.style.display = 'block';
        error7.innerHTML = 'Please enter the regular price';
    } else if (!pricePattern.test(rpriceVal)) {
        error7.style.display = 'block';
        error7.innerHTML = 'Invalid price format';
    } else {
        error7.style.display = 'none';
        error7.innerHTML = '';
    }
}

function validateSalePrice() {
    const spriceVal = sprice.value;
    const pricePattern = /^[0-9]+(\.[0-9]{1,2})?$/;

    if (spriceVal.trim() === '') {
        error8.style.display = 'block';
        error8.innerHTML = 'Please enter the sale price';
    } else if (!pricePattern.test(spriceVal)) {
        error8.style.display = 'block';
        error8.innerHTML = 'Invalid price format';
    } else {
        error8.style.display = 'none';
        error8.innerHTML = '';
    }
}

function validateQuantity() {
    const quantityVal = quantity.value;
    const quantityPattern = /^[0-9]+$/;

    if (quantityVal.trim() === '') {
        error9.style.display = 'block';
        error9.innerHTML = 'Please enter the quantity';
    } else if (!quantityPattern.test(quantityVal)) {
        error9.style.display = 'block';
        error9.innerHTML = 'Invalid quantity format';
    } else {
        error9.style.display = 'none';
        error9.innerHTML = '';
    }
}

function validateForm() {
    validateProductName();
    validateCategory();
    validateBrand();
    validateColor();
    validateDescription();
    validateSize();
    validateRegularPrice();
    validateSalePrice();
    validateQuantity();

    if (error1.innerHTML || error2.innerHTML || error3.innerHTML || error4.innerHTML || error5.innerHTML || error6.innerHTML || error7.innerHTML || error8.innerHTML || error9.innerHTML || error10.innerHTML) {
        return false;
    }
    return true;
}

document.addEventListener('DOMContentLoaded', function () {
    pnameId.addEventListener('blur', validateProductName);
    catId.addEventListener('blur', validateCategory);
    brandId.addEventListener('blur', validateBrand);
    colorId.addEventListener('blur', validateColor);
    descId.addEventListener('blur', validateDescription);
    sizeId.addEventListener('blur', validateSize);
    rprice.addEventListener('blur', validateRegularPrice);
    sprice.addEventListener('blur', validateSalePrice);
    quantity.addEventListener('blur', validateQuantity);

    productForm.addEventListener('submit', function (e) {
        if (!validateForm()) {
            e.preventDefault();
        }
    });
});


        
        

        
            </script>
</body>
</html>











// function validateForm() {
//     validateProductName();
//     validateCategory();
//     validateBrand();
//     validateColor();
//     validateDescription();
//     validateSize();
//     validateRegularPrice();
//     validateQuantity();
//     validateImages();

//     if (error1.innerHTML || error2.innerHTML || error3.innerHTML || error4.innerHTML || error5.innerHTML || error6.innerHTML || error7.innerHTML || error8.innerHTML || errorImages.innerHTML) {
//         return false;
//     }
//     return true;
// }

// document.addEventListener('DOMContentLoaded', function () {
//     pnameId.addEventListener('blur', validateProductName);
//     catId.addEventListener('change', validateCategory);  
//     brandId.addEventListener('change', validateBrand);   
//     colorId.addEventListener('blur', validateColor);
//     descId.addEventListener('blur', validateDescription);
//     sizeId.addEventListener('blur', validateSize);
//     rprice.addEventListener('blur', validateRegularPrice);
//     quantity.addEventListener('blur', validateQuantity);

//     // Validate images on file selection
//     $('.upload__inputfile').on('change', validateImages);

//     // Form submission validation
//     productForm.addEventListener('submit', function (event) {
//         if (!validateForm()) {
//             event.preventDefault();
//         }
//     });
// });


<!-- <script>
        const pnameId = document.getElementById('productname');
        const catId = document.getElementById('category');
        const brandId = document.getElementById('brand');
        const colorId = document.getElementById('color');
        const sizeId = document.getElementById('size');
        const desId = document.getElementById('description');
        const qtyId = document.getElementById('quantity');
        const regPriceId = document.getElementById('regularPrice');
        const salePriceId = document.getElementById('salePrice');
        const err1 = document.getElementById('error1');
        const err2 = document.getElementById('error2');
        const err3 = document.getElementById('error3');
        const err4 = document.getElementById('error4');
        const err5 = document.getElementById('error5');
        const err6 = document.getElementById('error6');
        const err7 = document.getElementById('error7');
        const err8 = document.getElementById('error8');
        const err9 = document.getElementById('error9');
        const imgErr = document.getElementById('imageError');
    
        function showError(inputId, errorId, message) {
            errorId.innerText = message;
            errorId.style.display = 'block';
            if (inputId) {
                inputId.focus();
            }
        }
    
        function hideErrors() {
            const errors = document.querySelectorAll('.error-message');
            errors.forEach(error => error.style.display = 'none');
        }
    
        function validateForm() {
            hideErrors();
            let isValid = true;
    
            if (pnameId.value.trim() === '') {
                showError(pnameId, err1, "Product name cannot be empty.");
                isValid = false;
            }
            if (catId.value === '') {
                showError(catId, err2, "Please select a category.");
                isValid = false;
            }
            if (brandId.value.trim() === '') {
                showError(brandId, err3, "Brand cannot be empty.");
                isValid = false;
            }
            if (colorId.value.trim() === '') {
                showError(colorId, err4, "Color cannot be empty.");
                isValid = false;
            }
            if (sizeId.value.trim() === '') {
                showError(sizeId, err5, "Size cannot be empty.");
                isValid = false;
            }
            if (desId.value.trim() === '') {
                showError(desId, err6, "Description cannot be empty.");
                isValid = false;
            }
            if (qtyId.value.trim() === '') {
                showError(qtyId, err7, "Quantity cannot be empty.");
                isValid = false;
            }
            if (regPriceId.value.trim() === '' || isNaN(regPriceId.value) || parseFloat(regPriceId.value) <= 0) {
                showError(regPriceId, err8, "Regular price should be a positive number.");
                isValid = false;
            }
            if (salePriceId.value.trim() === '' || isNaN(salePriceId.value) || parseFloat(salePriceId.value) <= 0) {
                showError(salePriceId, err9, "Sale price should be a positive number.");
                isValid = false;
            }
    
            // Validate image count
            const existingImagesCount = document.querySelectorAll('input[name="existingImages[]"]').length;
            const newImagesCount = document.querySelectorAll('input[name="newImage"]').length - existingImagesCount;
    
            if ((existingImagesCount + newImagesCount) < 3) {
                showError(null, imgErr, "Please upload at least 3 images.");
                isValid = false;
            }
    
            return isValid;
        }
    
        $(document).ready(function () {
            $("#productForm").on("submit", function (e) {
                if (!validateForm()) {
                    e.preventDefault();  // Prevent form submission if validation fails
                }
            });
    
            ImgUpload();
    
            function ImgUpload() {
                var imgWrap = "";
                var imgArray = [];
                var croppers = {};
    
                $('.upload__inputfile').each(function (index) {
                    $(this).on('change', function (e) {
                        imgWrap = $(this).closest('.upload__box').find('.upload__img-wrap');
                        var maxLength = $(this).data('max_length');
    
                        var files = e.target.files;
                        var filesArr = Array.prototype.slice.call(files);
    
                        filesArr.forEach(function (f) {
                            if (!f.type.match('image.*')) {
                                return;
                            }
    
                            if (imgArray.length >= maxLength) {
                                return false;
                            }
    
                            imgArray.push(f);
    
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + f.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                                imgWrap.append(html);
    
                                var cropperImage = $('#cropper-image-' + index);
                                var cropperContainer = cropperImage.closest('.cropper-container');
                                cropperImage.attr('src', e.target.result);
                                cropperContainer.show();
    
                                if (croppers[index]) {
                                    croppers[index].destroy();
                                }
    
                                croppers[index] = new Cropper(cropperImage[0], {
                                    aspectRatio: 1, // Square aspect ratio
                                    viewMode: 1,
                                    guides: true,
                                    background: false,
                                    autoCropArea: 1,
                                    zoomable: true
                                });
                            }
                            reader.readAsDataURL(f);
                        });
                    });
                });
    
                $('button[id^="crop-save-button"]').on('click', function () {
                    var index = $(this).attr('id').split('-').pop();
                    var cropper = croppers[index];
    
                    if (cropper) {
                        var croppedCanvas = cropper.getCroppedCanvas();
                        croppedCanvas.toBlob(function (blob) {
                            var file = new File([blob], 'cropped-image.png', { type: 'image/png' });
                            imgArray.push(file);
    
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + file.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                                $('#cropper-image-' + index).closest('.upload__box').find('.upload__img-wrap').append(html);
                            }
                            reader.readAsDataURL(file);
    
                            var cropperContainer = $('#cropper-image-' + index).closest('.cropper-container');
                            cropperContainer.hide();
                            cropper.destroy();
                            croppers[index] = null;
                        }, 'image/png', 1.0);
                    }
                });
    
                $('body').on('click', ".upload__img-close", function () {
                    var file = $(this).parent().data("file");
                    imgArray = imgArray.filter(function (img) {
                        return img.name !== file;
                    });
    
                    // Track deleted images
                    var deletedImages = $('#deletedImages').val().split(',').filter(Boolean);
                    deletedImages.push(file);
                    $('#deletedImages').val(deletedImages.join(','));
    
                    $(this).closest('.upload__img-box').remove();
                });
            }
        });
    </script> -->







    <!-- const pnameId = document.getElementById('productname');
const catId = document.getElementById('category');
const brandId = document.getElementById('brand');
const colorId = document.getElementById('color');
const descId = document.getElementById('description');
const sizeId = document.getElementById('size');
const rprice = document.getElementById('regularprice');
const sprice = document.getElementById('saleprice');
const quantity = document.getElementById('quantity');
const offer = document.getElementById('productoffer');

const error1 = document.getElementById('error1');
const error2 = document.getElementById('error2');
const error3 = document.getElementById('error3');
const error4 = document.getElementById('error4');
const error5 = document.getElementById('error5');
const error6 = document.getElementById('error6');
const error7 = document.getElementById('error7');
const error8 = document.getElementById('error8');
const error9 = document.getElementById('error9');
const error10 = document.getElementById('error10');

const productForm = document.getElementById('productForm'); -->
            
<!-- jQuery(document).ready(function () {
    ImgUpload();
});

function ImgUpload() {
    var imgWrap = "";
    var imgArray = [];
    var croppers = {};

    $('.upload__inputfile').each(function (index) {
        $(this).on('change', function (e) {
            imgWrap = $(this).closest('.upload__box').find('.upload__img-wrap');
            var maxLength = $(this).data('max_length');

            var files = e.target.files;
            var filesArr = Array.prototype.slice.call(files);

            filesArr.forEach(function (f) {
                if (!f.type.match('image.*')) {
                    return;
                }

                if (imgArray.length >= maxLength) {
                    return false;
                }

                imgArray.push(f);

                var reader = new FileReader();
                reader.onload = function (e) {
                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + f.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                    imgWrap.append(html);

                    // Show the cropper container and initialize Cropper.js
                    var cropperImage = $('#cropper-image-' + index);
                    var cropperContainer = cropperImage.closest('.cropper-container');
                    cropperImage.attr('src', e.target.result);
                    cropperContainer.show();

                    if (croppers[index]) {
                        croppers[index].destroy();
                    }

                    croppers[index] = new Cropper(cropperImage[0], {
                        aspectRatio: 1, // Square aspect ratio
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });
                }
                reader.readAsDataURL(f);
            });
        });
    });

    $('button[id^="crop-save-button"]').on('click', function () {
        var index = $(this).attr('id').split('-').pop();
        var cropper = croppers[index];

        if (cropper) {
            var croppedCanvas = cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                var file = new File([blob], 'cropped-image.png', { type: 'image/png' });
                imgArray.push(file);

                var reader = new FileReader();
                reader.onload = function (e) {
                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-file='" + file.name + "' class='img-bg'><div class='upload__img-close'>×</div></div></div>";
                    $('#cropper-image-' + index).closest('.upload__box').find('.upload__img-wrap').append(html);
                }
                reader.readAsDataURL(file);

                // Hide the cropper container and destroy the cropper instance
                var cropperContainer = $('#cropper-image-' + index).closest('.cropper-container');
                cropperContainer.hide();
                cropper.destroy();
                croppers[index] = null;
            }, 'image/png', 1.0);
        }
    });

    $('body').on('click', ".upload__img-close", function () {
        var file = $(this).parent().data("file");
        imgArray = imgArray.filter(function (img) {
            return img.name !== file;
        });
        $(this).closest('.upload__img-box').remove();
    });
}


      
function validateProductName() {
    const pnameVal = pnameId.value;
    if (pnameVal.trim() === '') {
        error1.style.display = 'block';
        error1.innerHTML = 'Please enter the product name';
    } else {
        error1.style.display = 'none';
        error1.innerHTML = '';
    }
}

function validateCategory() {
    const catVal = catId.value;
    if (catVal.trim() === '') {
        error2.style.display = 'block';
        error2.innerHTML = 'Please select a category';
    } else {
        error2.style.display = 'none';
        error2.innerHTML = '';
    }
}

function validateBrand() {
    const brandVal = brandId.value;
    if (brandVal.trim() === '') {
        error3.style.display = 'block';
        error3.innerHTML = 'Please enter the brand';
    } else {
        error3.style.display = 'none';
        error3.innerHTML = '';
    }
}

function validateColor() {
    const colorVal = colorId.value;
    if (colorVal.trim() === '') {
        error4.style.display = 'block';
        error4.innerHTML = 'Please enter the color';
    } else {
        error4.style.display = 'none';
        error4.innerHTML = '';
    }
}

function validateDescription() {
    const descVal = descId.value;
    if (descVal.trim() === '') {
        error5.style.display = 'block';
        error5.innerHTML = 'Please enter a description';
    } else {
        error5.style.display = 'none';
        error5.innerHTML = '';
    }
}

function validateSize() {
    const sizeVal = sizeId.value;
    if (sizeVal.trim() === '') {
        error6.style.display = 'block';
        error6.innerHTML = 'Please enter the size';
    } else {
        error6.style.display = 'none';
        error6.innerHTML = '';
    }
}

function validateRegularPrice() {
    const rpriceVal = rprice.value;
    const pricePattern = /^[0-9]+(\.[0-9]{1,2})?$/;

    if (rpriceVal.trim() === '') {
        error7.style.display = 'block';
        error7.innerHTML = 'Please enter the regular price';
    } else if (!pricePattern.test(rpriceVal)) {
        error7.style.display = 'block';
        error7.innerHTML = 'Invalid price format';
    } else {
        error7.style.display = 'none';
        error7.innerHTML = '';
    }
}

function validateSalePrice() {
    const spriceVal = sprice.value;
    const pricePattern = /^[0-9]+(\.[0-9]{1,2})?$/;

    if (spriceVal.trim() === '') {
        error8.style.display = 'block';
        error8.innerHTML = 'Please enter the sale price';
    } else if (!pricePattern.test(spriceVal)) {
        error8.style.display = 'block';
        error8.innerHTML = 'Invalid price format';
    } else {
        error8.style.display = 'none';
        error8.innerHTML = '';
    }
}

function validateQuantity() {
    const quantityVal = quantity.value;
    const quantityPattern = /^[0-9]+$/;

    if (quantityVal.trim() === '') {
        error9.style.display = 'block';
        error9.innerHTML = 'Please enter the quantity';
    } else if (!quantityPattern.test(quantityVal)) {
        error9.style.display = 'block';
        error9.innerHTML = 'Invalid quantity format';
    } else {
        error9.style.display = 'none';
        error9.innerHTML = '';
    }
}

function validateForm() {
    validateProductName();
    validateCategory();
    validateBrand();
    validateColor();
    validateDescription();
    validateSize();
    validateRegularPrice();
    validateSalePrice();
    validateQuantity();

    if (error1.innerHTML || error2.innerHTML || error3.innerHTML || error4.innerHTML || error5.innerHTML || error6.innerHTML || error7.innerHTML || error8.innerHTML || error9.innerHTML || error10.innerHTML) {
        return false;
    }
    return true;
}

document.addEventListener('DOMContentLoaded', function () {
    pnameId.addEventListener('blur', validateProductName);
    catId.addEventListener('blur', validateCategory);
    brandId.addEventListener('blur', validateBrand);
    colorId.addEventListener('blur', validateColor);
    descId.addEventListener('blur', validateDescription);
    sizeId.addEventListener('blur', validateSize);
    rprice.addEventListener('blur', validateRegularPrice);
    sprice.addEventListener('blur', validateSalePrice);
    quantity.addEventListener('blur', validateQuantity);

    productForm.addEventListener('submit', function (e) {
        if (!validateForm()) {
            e.preventDefault();
        }
    });
});


        
            </script>

<%- include('partials/footer')%>
</body>
</html> -->
